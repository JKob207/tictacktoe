{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","key","this","squares","listSquares","counter","squareRow","j","push","renderSquare","el","React","Component","Game","state","history","Array","fill","pos","reverseHistory","stepNumber","xIsNext","slice","length","calcuateWinner","setState","concat","calcuatePosition","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","positions","toString","charAt","console","log","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6995bcae.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button\r\n            className=\"square\"\r\n            onClick={props.onClick}>\r\n            {props.value}\r\n        </button >\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                key={i}\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)} />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let listSquares = [];\r\n        let counter = 0;\r\n        for (let i = 0; i < 3; i++) {\r\n            let squareRow = []\r\n            for (let j = 0; j < 3; j++) {\r\n                squareRow.push(this.renderSquare(counter))\r\n                counter++;\r\n            }\r\n            const el = <div className=\"board-row\" key={counter}>{squareRow}</div>\r\n            listSquares.push(el)\r\n        }\r\n        return (\r\n            <div>\r\n                {listSquares}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n                pos: \"null\"\r\n            }],\r\n            reverseHistory: false,\r\n            stepNumber: 0,\r\n            xIsNext: true\r\n        }\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calcuateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n                pos: calcuatePosition(i)\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n\r\n    reverseHistory() {\r\n        this.setState({\r\n            reverseHistory: !this.state.reverseHistory\r\n        })\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calcuateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ? 'Go to step #' + move : 'Go on game start';\r\n            return (\r\n                <li key={move}>\r\n                    {move === history.length - 1 ?\r\n                        <button onClick={() => this.jumpTo(move)}><b>{desc}</b></button> :\r\n                        <button onClick={() => this.jumpTo(move)}>{desc}</button>}<span> Move: {step.pos}</span>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = 'Wygrywa: ' + winner;\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={i => this.handleClick(i)} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nfunction calcuatePosition(pos) {\r\n    let posX = (pos / 3).toString().charAt(0);\r\n    let positions = (posX + \"x\" + (pos % 3)).toString();\r\n    console.log(positions);\r\n    return positions;\r\n}\r\n\r\nfunction calcuateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}